<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="resizedImgList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="resizedImgList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABS
        DwAAAk1TRnQBSQFMAgEBAwEAATgBAAE4AQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEgBgABJC4AAxkBIgNEAXsDWQG8A4QB5wPMAfwDzAH8A4QB5wNZAbwDRAF7AxkBIv8A
        UQADGAEhA1UBqgPRAf0D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPRAf0DVQGqAxgBIf8A
        RQADOQFeA6cB9APmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wOn
        AfQDOQFeIAA0/wM1AVVAAAO5AfUI/wPXAfoDMwFQkAADRAF3A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/
        A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wNEAXccAAT/A2EBxgNVAaoDVQGq
        A1UBqgNVAaoDVQGqA1UBqgNVAaoDVQGqA1UBqgNVAaoE/wM1AVU8AAMhATADzAH4A1wBvwNVAaoDqwHx
        A0MBdYwAAzkBXgPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A+YB/wM5AV4YAAT/AzUBVSgABP8DNQFVPAADSQGFA3YB3AMjATIEAANb
        AbkDVgGuiAADGAEhA6cB9APmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/
        A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wOnAfQDGAEhFAAE/wM1AVUoAAT/AzUBVSgAAzgBWwNM
        AZADGAEgAxQBGwNWAbAE/wNgAcUDFAEbBAADSwGKBP8DfQHgAx4BKwMQARUDQQFwA04BlQMJAQtwAANV
        AaoD5gH/A+YB/wPmAf8D5gH/A7wB/wNuAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wNu
        Af8DvAH/A+YB/wPmAf8D5gH/A+YB/wNVAaoUAAT/AzUBVSgAA50B7QMsAUMkAAMQARUDcwHaA40B6APX
        AfoDjwHqA3cB3wNOAZUDIAEuAwMBBAQAAxUBHANEAXgDaAHPA7kB9QOrAfEDdwHfA48B6gMzAVJsAAMZ
        ASID0QH9A+YB/wPmAf8D5gH/A+YB/wPaAf8DTgH/A+EB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPh
        Af8DTgH/A9oB/wPmAf8D5gH/A+YB/wPmAf8D0QH9AxkBIhAABP8DNQFVKAADQAFuAwkBCyQAA1IBoAN8
        AeEDNwFaAzMBUANIAYMDKgFAGAADGwElA0UBfAM7AWMDJAE1A2ABwwNdAcBsAANEAXsD5gH/A+YB/wPm
        Af8D5gH/A+YB/wPmAf8DewH/A5MB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wOTAf8DewH/A+YB/wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A0QBexAABP8DNQFVKAADBAEFAzgBWyAAAzABSwT/A1YBrwMEAQUQAAM+
        AWsDfQHgA6QB8ANOAZUDEAEVEAADOgFgBP8DQQFwaAADWQG8A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/
        A9kB/wNZAf8DkwH/A+EB/wPmAf8D5gH/A+EB/wOTAf8DWQH/A9kB/wPmAf8D5gH/A+YB/wPmAf8D5gH/
        A+YB/wNZAbwQAAT/AzUBVSgAAycBOQOBAeMDXQHAAxoBJBgAAxABFQNQAZoDjwHqA04BlQMJAQsEAAML
        AQ4DVQGqA40B6ANZAbYDVQGqA3MB2gNgAcUDEAEVBAADBgEHA0EBcAOHAeUDWQG2AxgBIGgAA4QB5wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D2QH/A3oB/wNLAf8DbgH/A24B/wNLAf8DegH/A9kB/wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8DhAHnEAAE/wM1AVUoAAMJAQsDQAFuBP8DWgG4AxoBJBgA
        AwQBBQNLAYoD3AH8Ax4BKwQAAzwBZAT/AzoBYQMJAQwEAAMtAUUDcwHaA04BlQQAAxUBHAPXAfoDYAHF
        AxYBHmwAA8wB/APmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D4gH/A28B/wNtAf8DrQH/A60B/wNt
        Af8DbwH/A+IB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8DzAH8EAAE/wM1AVUMACz/A10BwBwA
        AzUBVQT/CAADUgGgBP8MAAMEAQUDVgGvA6QB8AgABP8DVQGqcAADzAH8A+YB/wPmAf8D5gH/A+YB/wPm
        Af8D5gH/A+YB/wObAf8DdgH/A+UB/wPmAf8D5gH/A+UB/wN2Af8DmwH/A+YB/wPmAf8D5gH/A+YB/wPm
        Af8D5gH/A+YB/wPMAfwQAAT/AzUBVQwAA1UBqgNVAaoDVQGqA1UBqgNVAaoDVQGqA1UBqgNVAaoDXAG/
        BP8DtwH0A00BkRwAAzYBWQT/AwwBEAQAA04BlQT/Aw4BEggAAwsBDgNaAbgDdwHfBAADCQELBP8DVQGs
        BAJsAAOEAecD5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A2UB/wPCAf8D5gH/A+YB/wPmAf8D5gH/
        A8IB/wNlAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A4QB5xAABP8DNQFVKAADEAEVA1EBnAT/
        A00BkQMOARIYAAMJAQsDVwG1A8wB+AMbASUEAAMuAUcE/wNNAZIDFQEcBAADPgFrA48B6gM+AWsEAAMT
        ARkDtwH0A3MB2gMlATdsAANZAbwD5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A14B/wPMAf8D5gH/
        A+YB/wPmAf8D5gH/A8wB/wNeAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A1kBvBAABP8DNQFV
        KAADLQFFA58B7wNRAZ8cAAMYASADfQHgA58B7wM8AWUMAANHAYAQ/wNVAaoMAAMhATADdwHfA48B6gMh
        ATBoAANEAXsD5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A4QB/wOXAf8D5gH/A+YB/wPmAf8D5gH/
        A5cB/wOEAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A0QBexAABP8DNQFVKAADEwEZAygBPCAA
        AyMBMgOfAe8DWQG8Aw4BEgQAAxIBFwMEAQUEAAMuAUcDTgGVA1EBnwM7AWMDCwEOBAADDwEUAwcBCQQA
        A0QBeQO3AfQDKgFAaAADGQEiA9EB/QPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPTAf8DUgH/A6IB/wPg
        Af8D4AH/A6IB/wNSAf8D0wH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A9EB/QMZASIQAAT/AzUBVSgA
        A1EBnAMQARUkAANBAXADnAHuA0sBiwNSAaADXgHBA0EBcBgAAzABSwNdAb4DVQGsAz4BawN2AdwDUQGf
        cAADVQGqA+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPPAf8DdAH/A0kB/wNJAf8DdAH/A88B/wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8DVQGqFAAE/wM1AVUoAAT/AzUBVSgAA2QBygj/A3cB3wT/
        A30B4AMtAUUDBAEFBAADHgErA1cBtQT/A58B7wOfAe8E/wOBAeQDJwE6cAADGAEhA6cB9APmAf8D5gH/
        A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/
        A+YB/wOnAfQDGAEhFAAE/wM1AVUoAAT/AzUBVSgAAygBPAM5AV8DEAEVAw4BEgNDAXUDdwHfA2QBygMY
        ASAEAANOAZUDjwHqA04BlQMaASQDCwEOAzABSgM7AWMDBgEHdAADOQFeA+YB/wPmAf8D5gH/A+YB/wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/AzkBXhgA
        BP8DNQFVKAAE/wM1AVU8AAM+AWsDgQHjAycBOQQAA2ABxwNRAZyQAANEAXcD5gH/A+YB/wPmAf8D5gH/
        A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A0QBdxwANP8DNQFV
        PAADGAEgEP8DPgFqlAADOQFeA6cB9APmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPm
        Af8D5gH/A+YB/wOnAfQDOQFeIAADVQGqA1UBqgNVAaoDVQGqA1UBqgNVAaoDVQGqA1UBqgNVAaoDVQGq
        A1UBqgNVAaoDVQGqAycBOUAAA1IBowNVAaoDVQGqA1QBpgMkATWYAAMYASEDVQGqA9EB/QPmAf8D5gH/
        A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A9EB/QNVAaoDGAEh/wBRAAMZASIDRAF7A1kBvAOEAecDzAH8
        A8wB/AOEAecDWQG8A0QBewMZASL/AD0AAUIBTQE+BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEB
        FgAD/wEAAf4BAAF/Bv8DAAH4AQABHwb/AwAB8AEAAQ8B8AEAAT8B/wHBAf8DAAHgAQABBwHwAQABPwH/
        AYEB/wMAAcABAAEDAfMB/wE/Af8BiQH/AwABgAEAAQEB8wH/AT8B8AEIAQcDAAGAAQABAQHzAf8BPwHg
        AQgBBwYAAfMB/wE/AeABfgEHBgAB8wH/AT8BwwHBAeMGAAHzAf8BDwHBAQABgwYAAfMB/wEHAeEBCAGH
        BgAB8wGAAQcB8wE4Ac8GAAHzAYABBwHxARgBhwYAAfMB/wEHAeEBCAGHBgAB8wH/AR8BwwGBAcMGAAHz
        Af8BPwHCAUEBIwYAAfMB/wE/AeABfgEHAwABgAEAAQEB8wH/AT8B8AEIAQcDAAGAAQABAQHzAf8BPwHw
        AQgBBwMAAcABAAEDAfMB/wE/Af8BiQH/AwAB4AEAAQcB8AEAAT8B/wGBAf8DAAHwAQABDwHwAQABPwH/
        AcEB/wMAAfgBAAEfBv8DAAH+AQABfwb/AwAL
</value>
  </data>
</root>