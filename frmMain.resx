<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="resizedImgList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="resizedImgList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABS
        DwAAAk1TRnQBSQFMAgEBAwEAASgBAAEoAQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEgBgABJC4AAxkBIgNEAXsDXwG8A5QB5wPQAfwD0AH8A5QB5wNfAbwDRAF7AxkBIv8A
        UQADGAEhA1cBqgPXAf0D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPXAf0DVwGqAxgBIf8A
        RQADOQFeA7cB9APmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wO3
        AfQDOQFeIAA0/wM1AVVAAAPLAfUI/wPfAfoDMwFQkAADRAF3A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/
        A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wNEAXccAAT/A2kBxgNXAaoDVwGq
        A1cBqgNXAaoDVwGqA1cBqgNXAaoDVwGqA1cBqgNXAaoE/wM1AVU8AAMhATAD2gH4A2MBvwNXAaoDvAHx
        A0MBdYwAAzkBXgPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A+YB/wM5AV4YAAT/AzUBVSgABP8DNQFVPAADSQGFA4cB3AMjATIEAANf
        AbkDWQGuiAADGAEhA7cB9APmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/
        A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wO3AfQDGAEhFAAE/wM1AVUoAAT/AzUBVSgAAzgBWwNM
        AZADGAEgAxQBGwNaAbAE/wNoAcUDFAEbBAADSwGKBP8DjQHgAx4BKwMQARUDQQFwA08BlQMJAQtwAANX
        AaoD5gH/A+YB/wPmAf8D5gH/A7wB/wNuAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wNu
        Af8DvAH/A+YB/wPmAf8D5gH/A+YB/wNXAaoUAAT/AzUBVSgAA7EB7QMsAUMkAAMQARUDggHaA58B6APf
        AfoDogHqA4gB3wNPAZUDIAEuAwMBBAQAAxUBHANEAXgDcgHPA8sB9QO8AfEDiAHfA6IB6gMzAVJsAAMZ
        ASID1wH9A+YB/wPmAf8D5gH/A+YB/wPaAf8DTgH/A+EB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPh
        Af8DTgH/A9oB/wPmAf8D5gH/A+YB/wPmAf8D1wH9AxkBIhAABP8DNQFVKAADQAFuAwkBCyQAA1MBoAOP
        AeEDNwFaAzMBUANIAYMDKgFAGAADGwElA0UBfAM7AWMDJAE1A2cBwwNkAcBsAANEAXsD5gH/A+YB/wPm
        Af8D5gH/A+YB/wPmAf8DewH/A5MB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wOTAf8DewH/A+YB/wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A0QBexAABP8DNQFVKAADBAEFAzgBWyAAAzABSwT/A1oBrwMEAQUQAAM+
        AWsDjQHgA7cB8ANPAZUDEAEVEAADOgFgBP8DQQFwaAADXwG8A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/
        A9kB/wNZAf8DkwH/A+EB/wPmAf8D5gH/A+EB/wOTAf8DWQH/A9kB/wPmAf8D5gH/A+YB/wPmAf8D5gH/
        A+YB/wNfAbwQAAT/AzUBVSgAAycBOQOTAeMDZAHAAxoBJBgAAxABFQNRAZoDogHqA08BlQMJAQsEAAML
        AQ4DVwGqA58B6ANdAbYDVwGqA4IB2gNoAcUDEAEVBAADBgEHA0EBcAOZAeUDXQG2AxgBIGgAA5QB5wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D2QH/A3oB/wNLAf8DbgH/A24B/wNLAf8DegH/A9kB/wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8DlAHnEAAE/wM1AVUoAAMJAQsDQAFuBP8DXwG4AxoBJBgA
        AwQBBQNLAYoD5gH8Ax4BKwQAAzwBZAT/AzoBYQMJAQwEAAMtAUUDggHaA08BlQQAAxUBHAPfAfoDaAHF
        AxYBHmwAA9AB/APmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D4gH/A28B/wNtAf8DrQH/A60B/wNt
        Af8DbwH/A+IB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D0AH8EAAE/wM1AVUMACz/A2QBwBwA
        AzUBVQT/CAADUwGgBP8MAAMEAQUDWgGvA7cB8AgABP8DVwGqcAAD0AH8A+YB/wPmAf8D5gH/A+YB/wPm
        Af8D5gH/A+YB/wObAf8DdgH/A+UB/wPmAf8D5gH/A+UB/wN2Af8DmwH/A+YB/wPmAf8D5gH/A+YB/wPm
        Af8D5gH/A+YB/wPQAfwQAAT/AzUBVQwAA1cBqgNXAaoDVwGqA1cBqgNXAaoDVwGqA1cBqgNXAaoDYwG/
        BP8DyAH0A00BkRwAAzYBWQT/AwwBEAQAA08BlQT/Aw4BEggAAwsBDgNfAbgDiAHfBAADCQELBP8DWAGs
        BAJsAAOUAecD5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A2UB/wPCAf8D5gH/A+YB/wPmAf8D5gH/
        A8IB/wNlAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A5QB5xAABP8DNQFVKAADEAEVA1EBnAT/
        A00BkQMOARIYAAMJAQsDXQG1A9oB+AMbASUEAAMuAUcE/wNNAZIDFQEcBAADPgFrA6IB6gM+AWsEAAMT
        ARkDyAH0A4IB2gMlATdsAANfAbwD5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A14B/wPMAf8D5gH/
        A+YB/wPmAf8D5gH/A8wB/wNeAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A18BvBAABP8DNQFV
        KAADLQFFA7AB7wNSAZ8cAAMYASADjQHgA7AB7wM8AWUMAANHAYAQ/wNXAaoMAAMhATADiAHfA6IB6gMh
        ATBoAANEAXsD5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A4QB/wOXAf8D5gH/A+YB/wPmAf8D5gH/
        A5cB/wOEAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A0QBexAABP8DNQFVKAADEwEZAygBPCAA
        AyMBMgOwAe8DXwG8Aw4BEgQAAxIBFwMEAQUEAAMuAUcDTwGVA1IBnwM7AWMDCwEOBAADDwEUAwcBCQQA
        A0QBeQPIAfQDKgFAaAADGQEiA9cB/QPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPTAf8DUgH/A6IB/wPg
        Af8D4AH/A6IB/wNSAf8D0wH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A9cB/QMZASIQAAT/AzUBVSgA
        A1EBnAMQARUkAANBAXADsAHuA0sBiwNTAaADZQHBA0EBcBgAAzABSwNjAb4DWAGsAz4BawOHAdwDUgGf
        cAADVwGqA+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPPAf8DdAH/A0kB/wNJAf8DdAH/A88B/wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8DVwGqFAAE/wM1AVUoAAT/AzUBVSgAA20Bygj/A4gB3wT/
        A40B4AMtAUUDBAEFBAADHgErA10BtQT/A7AB7wOwAe8E/wOSAeQDJwE6cAADGAEhA7cB9APmAf8D5gH/
        A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/
        A+YB/wO3AfQDGAEhFAAE/wM1AVUoAAT/AzUBVSgAAygBPAM5AV8DEAEVAw4BEgNDAXUDiAHfA20BygMY
        ASAEAANPAZUDogHqA08BlQMaASQDCwEOAzABSgM7AWMDBgEHdAADOQFeA+YB/wPmAf8D5gH/A+YB/wPm
        Af8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/AzkBXhgA
        BP8DNQFVKAAE/wM1AVU8AAM+AWsDkwHjAycBOQQAA2kBxwNRAZyQAANEAXcD5gH/A+YB/wPmAf8D5gH/
        A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A0QBdxwANP8DNQFV
        PAADGAEgEP8DPgFqlAADOQFeA7cB9APmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPm
        Af8D5gH/A+YB/wO3AfQDOQFeIAADVwGqA1cBqgNXAaoDVwGqA1cBqgNXAaoDVwGqA1cBqgNXAaoDVwGq
        A1cBqgNXAaoDVwGqAycBOUAAA1QBowNXAaoDVwGqA1YBpgMkATWYAAMYASEDVwGqA9cB/QPmAf8D5gH/
        A+YB/wPmAf8D5gH/A+YB/wPmAf8D5gH/A9cB/QNXAaoDGAEh/wBRAAMZASIDRAF7A18BvAOUAecD0AH8
        A9AB/AOUAecDXwG8A0QBewMZASL/AD0AAUIBTQE+BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEB
        FgAD/wEAAf4BAAF/Bv8DAAH4AQABHwb/AwAB8AEAAQ8B8AEAAT8B/wHBAf8DAAHgAQABBwHwAQABPwH/
        AYEB/wMAAcABAAEDAfMB/wE/Af8BiQH/AwABgAEAAQEB8wH/AT8B8AEIAQcDAAGAAQABAQHzAf8BPwHg
        AQgBBwYAAfMB/wE/AeABfgEHBgAB8wH/AT8BwwHBAeMGAAHzAf8BDwHBAQABgwYAAfMB/wEHAeEBCAGH
        BgAB8wGAAQcB8wE4Ac8GAAHzAYABBwHxARgBhwYAAfMB/wEHAeEBCAGHBgAB8wH/AR8BwwGBAcMGAAHz
        Af8BPwHCAUEBIwYAAfMB/wE/AeABfgEHAwABgAEAAQEB8wH/AT8B8AEIAQcDAAGAAQABAQHzAf8BPwHw
        AQgBBwMAAcABAAEDAfMB/wE/Af8BiQH/AwAB4AEAAQcB8AEAAT8B/wGBAf8DAAHwAQABDwHwAQABPwH/
        AcEB/wMAAfgBAAEfBv8DAAH+AQABfwb/AwAL
</value>
  </data>
</root>